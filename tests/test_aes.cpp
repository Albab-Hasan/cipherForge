#include "cf/aes.hpp"

#include <gtest/gtest.h>
#include <array>
#include <span>

TEST(AES256, FIPSVectorEncryptDecrypt)
{
  // Test vector from FIPS-197 Appendix C.1 (AES-256 ECB)
  constexpr std::array<uint8_t, 32> key = {
      0x60, 0x3d, 0xeb, 0x10, 0x15, 0xca, 0x71, 0xbe,
      0x2b, 0x73, 0xae, 0xf0, 0x85, 0x7d, 0x77, 0x81,
      0x1f, 0x35, 0x2c, 0x07, 0x3b, 0x61, 0x08, 0xd7,
      0x2d, 0x98, 0x10, 0xa3, 0x09, 0x14, 0xdf, 0xf4};

  constexpr std::array<uint8_t, 16> plaintext = {
      0x6b, 0xc1, 0xbe, 0xe2,
      0x2e, 0x40, 0x9f, 0x96,
      0xe9, 0x3d, 0x7e, 0x11,
      0x73, 0x93, 0x17, 0x2a};

  constexpr std::array<uint8_t, 16> ciphertext_expected = {
      0xf3, 0xee, 0xd1, 0xbd,
      0xb5, 0xd2, 0xa0, 0x3c,
      0x06, 0x4b, 0x5a, 0x7e,
      0x3d, 0xb1, 0x81, 0xf8};

  cf::AES256 aes{std::span<const uint8_t, 32>(key)};

  std::array<uint8_t, 16> ciphertext{};
  aes.encrypt_block(plaintext, ciphertext);

  EXPECT_EQ(ciphertext_expected, ciphertext);

  std::array<uint8_t, 16> decrypted{};
  aes.decrypt_block(ciphertext, decrypted);

  EXPECT_EQ(plaintext, decrypted);
}
